### $LogFile, $UsnJrnl ###
-> Windows 시스템에서 자동으로 기록되는 시스템 로그 파일
-> 파일의 생성, 변경, 삭제 이력 추적 가능
Ex) 공격자가 컴퓨터 중요 파일을 모두 암호화해서 저장하고, 원본 파일 삭제하면? ; $LogFile, $UsnJrnl에서 찾기 가능

## $LogFile ##
-> 파일시스템의 저널링 기능을 위해 존재함

*저널링: 데이터 변경을 디스크에 기록하기 전에 기록함. 
-> 기록하기 이전 위치와 시점을 별도의 파일에 기록함
*트랜잭션: 저널링의 단위 (행위 단위)

*Undo/Redo: 작업을 되돌림/이전에 처리 못했던 작업 마저 완성

"$LogFile은 행위를 기록하는 파일임"
-> 로그가 $LogFile에 저장되는 시간이 그렇게 길지는 않음 
-> [root]에 존재

*주요 이벤트 목록
- File Creation
- File Deletion
- Writing Content of Resident File ; 파일 데이터 변경 (Resident, File 크기 700 바이트 이상)
- Writing Content of Non-Resident File ; 파일 데이터 변경 (Non-Resident, File 크기 700바이트 이하)
- Renaming File ; 파일 이름 변경
- Directory Creation ; 디렉토리 생성
- Directory Deletion ; 디렉토리 삭제
- Full Path ; $MFT에 저장된 데이터와 연계하여 해당 파일의 전체 경로 나타냄

-> Redo Info를 응용해서 시스템에 발생했던 트랜잭션을 거꾸로 되돌리면서 파일 복구 가능

## $UsnJrnl ##
-> 특정 파일의 변경 여부 파악 (파일에 대한 작업이 있었다는 사실을 확인하기 위한 목적)
-> 시간 순서대로 저장하고, 오래된 데이터 삭제
-> [root]\$extend\$UsnJrnl\$J에 존재
-> 실습에서 이벤트가 발생한 파일 확인 가능하고(어떤 파일에 대해), 대상 파일에 대한 이벤트 확인 가능(어떤 이벤트인지)

*주요 이벤트 목록
-File_Created
-File_Deleted
-Data_Added (데이터 추가)
-Data_Overwritten (데이터 덮어쓰기)
-Data_Truncated (데이터 축소)
-Basic_Info_Changed (파일/디렉토리 속성 변경)
-Access_Right_Changed (파일/디렉토리 접근 권한 변경)
-File_Closed (파일/디렉토리 닫힘)
-File_Renamed_Old (이름 변경 전)
-File_Renamed_New (이름 변경 후)

-> 약 하루 정도 기간의 로그를 $UsnJrnl에 기록되어있음 (평균적으로 ..)
-> 4~5일도 가능

## $LogFile, $UsnJrnl의 활용 ##
-> 파일이나 디렉토리의 생성, 수정, 변경 등의 이벤트를 추적하기 좋음

# 분석 상황 #
1. 랜섬웨어 분석
-> 컴퓨터에 있는 모든 파일을 암호화한 후 원격 서버로 전송 후 원본 파일은 삭제해 사용할 수 없게함

"파일 암호화, 전송할 임시 파일 생성, 원본 파일 삭제 등과 같은 로그 다수 생성"
-> $LogFile의 트랜잭션을 복구해 몇몇 파일 되살리기 가능

"$UsnJrnl을 통해 파일 암호화, 이름 변경, 압축 등과 같은 다양한 이벤트 확인 가능"
-> 랜섬웨어 동작 분석하기에 좋음

2. 자료 유출 사건 분석
Ex) 회사 내부망에서 파일을 다운받아 USB로 파일을 옮기고, 다운로드 받은 파일은 삭제한 상황
-> 파일 다운로드 기록 및 USB가 NTFS라면 생성 흔적 있을 것임

3. 안티 포렌식 행위 분석
-> 공격자가 삭제한 아티팩트 종류 및 삭제한 시간 확인 가능

"교차 검증을 통해 사건의 행위를 확신 짓는 것이 중요"

































